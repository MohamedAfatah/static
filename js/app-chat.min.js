var isRequesting = false;
const msgerForm = get(".chat-input");// form input
const user_inp = get(".message");// input in form 
const msgerChat = get(".chats-div"); // main dev
// constant style
const BOT_IMG = "https://gochat247.com/wp-content/uploads/2023/06/bot.png";
const PERSON_IMG = "https://gochat247.com/wp-content/uploads/2023/06/user.png";

msgerForm.addEventListener("submit", event => {
    event.preventDefault();
    console.log(isRequesting)
    // disable form until the old request is done 
    if (isRequesting) return;
    isRequesting = true;

    const user_input = user_inp.value;
    if (!user_input) return;

    appendMessage(PERSON_IMG, "chat-right", user_input);
    botResponse()

});

// function to take reponse from user or bot 
function appendMessage(img, side, text) {
    const msgHTML = `
        <div class="chat ${side}">
            <div class="chat-avatar">
                <a class="avatar">
                    <img src="${img}" class="circle" alt="avatar" />
                </a>
            </div>
            <div class="chat-body">
                <div class="chat-text">
                    <p>${text}</p>
                </div>
            </div>

        </div>
    `;

    msgerChat.insertAdjacentHTML("beforeend", msgHTML);
    document.querySelector(".chat-area").scrollTop = document.querySelector(".chat-area > .chats").offsetHeight;
}

function botResponse() {
    const user_input = user_inp.value;

    fetch('/get_response', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: 'text=' + user_input
    })
        .then(function (response) {
            if (!response.ok) {
                throw Error(response.statusText);
            }
            return response.text();
        })
        .then(function (botResponse) {
            // Display bot response in the chatbox
            appendMessage(BOT_IMG, "chat-response", botResponse);
            isRequesting = false;
        })
        .catch(function (error) {
            console.error('Error:', error);
            // Display an error message in the chatbox
            appendMessage(BOT_IMG, "chat-response", "Sorry, there was an error processing your request.");
        });

    document.querySelector(".message").value = "";
}

// Utils
function get(selector, root = document) {
    return root.querySelector(selector);
}

window.addEventListener("DOMContentLoaded", function () {
    "use strict";
    if (
        (900 < $(window).width() && $("#chat-sidenav").removeClass("sidenav"),
            0 < $(".sidebar-chat").length)
    )
        new PerfectScrollbar(".sidebar-chat", { theme: "dark" });
    if (0 < $(".chat-area").length)
        new PerfectScrollbar(".chat-area", { theme: "dark" });

    document.querySelector(".chat-area").scrollTop = document.querySelector(".chat-area > .chats").offsetHeight;
});